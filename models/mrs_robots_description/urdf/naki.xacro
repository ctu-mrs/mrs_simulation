<?xml version="1.0"?>

<robot name="naki" xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- Args {-->
  <!-- Properties that can be assigned at build time as arguments.
  Is there a reason not to make all properties arguments?
  -->
  <xacro:property name="namespace" value="$(arg namespace)" />
  <xacro:property name='model_config_file' value="$(arg model_config_file)"/>
  <xacro:property name="optionals" value="${load_yaml(model_config_file)}" />

  <xacro:arg name='name' default='naki' />
  <xacro:arg name='mavlink_addr' default='INADDR_ANY' />
  <xacro:arg name='mavlink_udp_port' default='14560' />
  <xacro:arg name='mavlink_tcp_port' default='4560' />
  <xacro:arg name='serial_enabled' default='false' />
  <xacro:arg name='serial_device' default='/dev/ttyACM0' />
  <xacro:arg name='baudrate' default='921600' />
  <xacro:arg name='qgc_addr' default='INADDR_ANY' />
  <xacro:arg name='qgc_udp_port' default='14550' />
  <xacro:arg name='sdk_addr' default='INADDR_ANY' />
  <xacro:arg name='sdk_udp_port' default='14540' />
  <xacro:arg name='hil_mode' default='false' />
  <xacro:arg name='hil_state_level' default='false' />
  <xacro:arg name='send_vision_estimation' default='false' />
  <xacro:arg name='send_odometry' default='false' />
  <xacro:arg name='use_lockstep' default='true' />
  <xacro:arg name='use_tcp' default='true' />
  <xacro:arg name='vehicle_is_tailsitter' default='false' />
  <xacro:arg name='visual_material' default='DarkGrey' />
  <xacro:arg name='gps_indoor_jamming' default='false' />
  <!--}-->

  <!-- includes definition of sensors xacros and Math {-->
    <!-- macros for gazebo plugins, sensors -->
    <xacro:include filename="$(arg mrs_robots_description_dir)/urdf/component_snippets.xacro" />
  <!--}-->

  <!-- ================================================================== -->
  <!-- ||                    parameters definition                     || -->
  <!-- ================================================================== -->

  <!-- Robot parameters and arguments {-->
  <xacro:property name="mass" value="7.00" /> <!-- [kg] -->
  <xacro:property name="body_radius" value="0.47" /> <!-- [m] -->
  <xacro:property name="body_height" value="0.155" /> <!-- [m] -->
  <xacro:property name="body_center_z" value="-0.0195" /> <!-- [m] -->
  <xacro:property name="legs_width" value="0.43" /> <!-- [m] -->
  <xacro:property name="legs_height" value="0.12" /> <!-- [m] -->
  <xacro:property name="mass_rotor" value="0.005" /> <!-- [kg] -->
  <xacro:property name="radius_rotor" value="0.165" /> <!-- [m] -->
  <xacro:property name="rotor_offset_top" value="0.0235" /> <!-- [m] -->
  <xacro:property name="arm_length_x" value="0.1911" /> <!-- [m] -->
  <xacro:property name="arm_length_y" value="0.2109" /> <!-- [m] -->
  <xacro:property name="arm_height" value="0.016" /> <!-- [m] -->
  <xacro:property name="arm_offset_z" value="0.015" /> <!-- [m] -->
  <xacro:property name="motor_to_mount" value="0.0095" /> <!-- [m] -->
  <xacro:property name="motor_z_offset" value="-0.01875" /> <!-- [m] -->
  <xacro:property name="motor_height" value="0.0235" /> <!-- [m] -->
  <xacro:property name="pixhawk_offset" value="0.008" /> <!-- [m] -->
  
  <xacro:property name="ultrasonic_x" value="0.3173" /> <!-- [m] -->
  <xacro:property name="ultrasonic_y" value="0.3390" /> <!-- [m] -->
  <xacro:property name="ultrasonic_yaw" value="0.822463619" /> <!-- [rad] -->

  <!--}-->

  <!-- Motor constants {-->
  <xacro:property name="rotor_velocity_slowdown_sim" value="0.0159236" />
  <xacro:property name="motor_constant" value="23.44" /> <!-- [N] -->
  <xacro:property name="moment_constant" value="0.016" /> <!-- [m] -->
  <xacro:property name="time_constant_up" value="${1.0 / 80.0}" /> <!-- [s] -->
  <xacro:property name="time_constant_down" value="${1.0 / 40.0}" /> <!-- [s] -->
  <xacro:property name="max_rot_velocity" value="1" /> <!-- [rad/s] -->
  <xacro:property name="rotor_drag_coefficient" value="0.001" /> <!--orig 8.06428e-04 -->
  <xacro:property name="rolling_moment_coefficient" value="1.0e-6" />
  <!--}-->

  <!-- Inertia constants {-->
  <xacro:property name="inertia_body_radius" value="0.29" /> <!-- [m] -->
  <xacro:property name="inertia_body_height" value="0.20" /> <!-- [m] -->
  <!--}-->

  <!-- Meshes {-->
  <!-- drone parts -->
  <xacro:property name="frame_legless_sensorless_file" value="package://mrs_robots_description/meshes/custom/naki/NAKI_legless_frame.dae" />
  <xacro:property name="legs_file" value="package://mrs_robots_description/meshes/custom/naki/NAKI_legs.dae" />
  <xacro:property name="rotor_mesh_file" value="package://mrs_robots_description/meshes/custom/naki/dji_f450_rotor.dae" />
  <xacro:property name="prop_mesh_file" value="package://mrs_robots_description/meshes/custom/naki/NAKI_propeller.dae"/>
  <xacro:property name="sony_camera_mesh_file" value="package://mrs_robots_description/meshes/custom/naki/NAKI_sony_alpha_6500_w_gimbal_mount.dae"/>
  <xacro:property name="pixhawk_mesh_file" value="package://mrs_robots_description/meshes/sensors/pixhawk.dae" />

  <!-- scales -->
  <xacro:property name="mesh_scale" value="1 1 1"/>
  <xacro:property name="mesh_scale_prop_ccw" value="1 1 1"/>
  <xacro:property name="mesh_scale_prop_cw" value="-1 1 1"/>
  <xacro:property name="mesh_scale_milimeters" value="0.001 0.001 0.001" />
  <!--}-->

  <!-- ================================================================== -->
  <!-- ||                    bare body definitions                     || -->
  <!-- ================================================================== -->

  <!-- Inertia blocks {-->
  <!-- cylinder body -->
  <xacro:property name="body_inertia">
    <inertia
      ixx="${mass * (3 * inertia_body_radius * inertia_body_radius + inertia_body_height * inertia_body_height) / 12}"
      iyy="${mass * (3 * inertia_body_radius * inertia_body_radius + inertia_body_height * inertia_body_height) / 12}"
      izz="${mass * inertia_body_radius * inertia_body_radius / 2}"
      ixy="0" ixz="0" iyz="0"/>
  </xacro:property>

  <!-- inertia of a single rotor, assuming it is a cuboid. Height=3mm, width=15mm -->
  <xacro:property name="rotor_inertia">
    <!-- <inertia -->
      <!--   ixx="${1/12 * mass_rotor * (0.015 * 0.015 + 0.003 * 0.003) * rotor_velocity_slowdown_sim}" -->
      <!--   iyy="${1/12 * mass_rotor * (4 * radius_rotor * radius_rotor + 0.003 * 0.003) * rotor_velocity_slowdown_sim}" -->
      <!--   izz="${1/12 * mass_rotor * (4 * radius_rotor * radius_rotor + 0.015 * 0.015) * rotor_velocity_slowdown_sim}" -->
      <!--   ixy="0.0" ixz="0.0"  iyz="0.0" /> -->
    <!-- [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] -->
    <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001" /> <!-- [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] -->
  </xacro:property>

  <!-- Instantiate multirotor_base_macro {-->
  <xacro:multirotor_base_without_mesh_with_collision_macro
    robot_namespace="${namespace}"
    mass="${mass}"
    >
    <xacro:insert_block name="body_inertia" />
    <collision>
      <origin xyz="0 0 ${body_center_z}" rpy="0 0 0" />
      <geometry>
        <cylinder radius="${body_radius}" length="${body_height}" />
      </geometry>
    </collision>
  </xacro:multirotor_base_without_mesh_with_collision_macro>

  <!--}-->

  <!--}-->

  <!-- Body parts {-->

  <!-- Boards {-->

  <xacro:textured_visual_macro
    robot_namespace="${namespace}"
    name="frame_legless_sensorless_file"
    mesh_file="${frame_legless_sensorless_file}"
    mesh_scale="${mesh_scale}"
    parent="base_link">
    <origin xyz="0 0 0" rpy="0 0 0" />
  </xacro:textured_visual_macro>

  <xacro:textured_visual_macro_with_collision
    robot_namespace="${namespace}"
    name="legs_file"
    mesh_file="${legs_file}"
    mesh_scale="${mesh_scale}"
    parent="base_link">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <collision>
      <!-- Is blocking garmin -->
      <!-- <origin xyz="0 0 -${body_height/2 + legs_height/2}" rpy="0 0 0"/> -->
      <!-- <geometry> -->
        <!-- <box size="${legs_width} ${legs_width} ${legs_height}" /> -->
      <!-- </geometry> -->
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="${legs_file}" scale="${mesh_scale}" />
      </geometry>
    </collision>
  </xacro:textured_visual_macro_with_collision>

  <!--}-->

  <!-- pixhawk {-->
   <xacro:visual_macro 
     robot_namespace="${namespace}" 
     name="pixhawk" 
     mesh_file="${pixhawk_mesh_file}" 
     mesh_scale="${mesh_scale}" 
     parent="base_link" 
     color="DarkGrey"> 
     <origin xyz="0 0 ${pixhawk_offset}" rpy="0 0 0" /> 
   </xacro:visual_macro> 
  <!-- } -->

  <!-- Rotors {-->
  <xacro:visual_macro
    robot_namespace="${namespace}"
    name="top_front_right_rotor"
    mesh_file="${rotor_mesh_file}"
    mesh_scale="${mesh_scale}"
    parent="base_link"
    color="Black">
  <origin xyz="${arm_length_x} -${arm_length_y} ${motor_z_offset + motor_to_mount}" rpy="0 0 0" />
  </xacro:visual_macro>

  <xacro:visual_macro
    robot_namespace="${namespace}"
    name="top_back_right_rotor"
    mesh_file="${rotor_mesh_file}"
    mesh_scale="${mesh_scale}"
    parent="base_link"
    color="Black">
  <origin xyz="-${arm_length_x} ${arm_length_y} ${motor_z_offset + motor_to_mount}" rpy="0 0 0" />
  </xacro:visual_macro>

  <xacro:visual_macro
    robot_namespace="${namespace}"
    name="top_front_left_rotor"
    mesh_file="${rotor_mesh_file}"
    mesh_scale="${mesh_scale}"
    parent="base_link"
    color="Black">
  <origin xyz="${arm_length_x} ${arm_length_y} ${motor_z_offset + motor_to_mount}" rpy="0 0 0" />
  </xacro:visual_macro>

  <xacro:visual_macro
    robot_namespace="${namespace}"
    name="top_back_left_rotor"
    mesh_file="${rotor_mesh_file}"
    mesh_scale="${mesh_scale}"
    parent="base_link"
    color="Black">
  <origin xyz="-${arm_length_x} -${arm_length_y} ${motor_z_offset + motor_to_mount}" rpy="0 0 0" />
  </xacro:visual_macro>

  <xacro:visual_macro
    robot_namespace="${namespace}"
    name="bottom_front_right_rotor"
    mesh_file="${rotor_mesh_file}"
    mesh_scale="${mesh_scale}"
    parent="base_link"
    color="Black">
  <origin xyz="${arm_length_x} -${arm_length_y} ${motor_z_offset - motor_to_mount}" rpy="0 ${rad180} 0" />
  </xacro:visual_macro>

  <xacro:visual_macro
    robot_namespace="${namespace}"
    name="bottom_back_right_rotor"
    mesh_file="${rotor_mesh_file}"
    mesh_scale="${mesh_scale}"
    parent="base_link"
    color="Black">
  <origin xyz="-${arm_length_x} ${arm_length_y} ${motor_z_offset - motor_to_mount}" rpy="0 ${rad180} 0" />
  </xacro:visual_macro>

  <xacro:visual_macro
    robot_namespace="${namespace}"
    name="bottom_front_left_rotor"
    mesh_file="${rotor_mesh_file}"
    mesh_scale="${mesh_scale}"
    parent="base_link"
    color="Black">
  <origin xyz="${arm_length_x} ${arm_length_y} ${motor_z_offset - motor_to_mount}" rpy="0 ${rad180} 0" />
  </xacro:visual_macro>

  <xacro:visual_macro
    robot_namespace="${namespace}"
    name="bottom_back_left_rotor"
    mesh_file="${rotor_mesh_file}"
    mesh_scale="${mesh_scale}"
    parent="base_link"
    color="Black">
  <origin xyz="-${arm_length_x} -${arm_length_y} ${motor_z_offset - motor_to_mount}" rpy="0 ${rad180} 0" />
  </xacro:visual_macro>

  <!--}-->

  <!-- Propellers + thrust physics {-->
  <xacro:vertical_rotor
    robot_namespace="${namespace}"
    suffix="top_front_right"
    direction="ccw"
    motor_constant="${motor_constant}"
    moment_constant="${moment_constant}"
    parent="base_link"
    mass_rotor="${mass_rotor}"
    radius_rotor="${radius_rotor}"
    time_constant_up="${time_constant_up}"
    time_constant_down="${time_constant_down}"
    max_rot_velocity="${max_rot_velocity}"
    motor_number="0"
    rotor_drag_coefficient="${rotor_drag_coefficient}"
    rolling_moment_coefficient="${rolling_moment_coefficient}"
    mesh_file="${prop_mesh_file}"
    mesh_scale="${mesh_scale_prop_ccw}"
    color="White">
    <origin xyz="${arm_length_x} -${arm_length_y} ${motor_z_offset + motor_to_mount + motor_height}" rpy="0 0 0" />
    <xacro:insert_block name="rotor_inertia" />
  </xacro:vertical_rotor>

  <xacro:vertical_rotor
    robot_namespace="${namespace}"
    suffix="top_back_left"
    direction="ccw"
    motor_constant="${motor_constant}"
    moment_constant="${moment_constant}"
    parent="base_link"
    mass_rotor="${mass_rotor}"
    radius_rotor="${radius_rotor}"
    time_constant_up="${time_constant_up}"
    time_constant_down="${time_constant_down}"
    max_rot_velocity="${max_rot_velocity}"
    motor_number="2"
    rotor_drag_coefficient="${rotor_drag_coefficient}"
    rolling_moment_coefficient="${rolling_moment_coefficient}"
    mesh_file="${prop_mesh_file}"
    mesh_scale="${mesh_scale_prop_ccw}"
    color="White">
    <origin xyz="-${arm_length_x} ${arm_length_y} ${motor_z_offset + motor_to_mount + motor_height}" rpy="0 0 0" />
    <xacro:insert_block name="rotor_inertia" />
  </xacro:vertical_rotor>

  <xacro:vertical_rotor
    robot_namespace="${namespace}"
    suffix="top_front_left"
    direction="cw"
    motor_constant="${motor_constant}"
    moment_constant="${moment_constant}"
    parent="base_link"
    mass_rotor="${mass_rotor}"
    radius_rotor="${radius_rotor}"
    time_constant_up="${time_constant_up}"
    time_constant_down="${time_constant_down}"
    max_rot_velocity="${max_rot_velocity}"
    motor_number="1"
    rotor_drag_coefficient="${rotor_drag_coefficient}"
    rolling_moment_coefficient="${rolling_moment_coefficient}"
    mesh_file="${prop_mesh_file}"
    mesh_scale="${mesh_scale_prop_cw}"
    color="White">
    <origin xyz="${arm_length_x} ${arm_length_y} ${motor_z_offset + motor_to_mount + motor_height}" rpy="0 0 0" />
    <xacro:insert_block name="rotor_inertia" />
  </xacro:vertical_rotor>

  <xacro:vertical_rotor
    robot_namespace="${namespace}"
    suffix="top_back_right"
    direction="cw"
    motor_constant="${motor_constant}"
    moment_constant="${moment_constant}"
    parent="base_link"
    mass_rotor="${mass_rotor}"
    radius_rotor="${radius_rotor}"
    time_constant_up="${time_constant_up}"
    time_constant_down="${time_constant_down}"
    max_rot_velocity="${max_rot_velocity}"
    motor_number="3"
    rotor_drag_coefficient="${rotor_drag_coefficient}"
    rolling_moment_coefficient="${rolling_moment_coefficient}"
    mesh_file="${prop_mesh_file}"
    mesh_scale="${mesh_scale_prop_cw}"
    color="White">
    <origin xyz="-${arm_length_x} -${arm_length_y} ${motor_z_offset + motor_to_mount + motor_height}" rpy="0 0 0" />
    <xacro:insert_block name="rotor_inertia" />
  </xacro:vertical_rotor>

  <xacro:vertical_rotor
    robot_namespace="${namespace}"
    suffix="bottom_front_right"
    direction="ccw"
    motor_constant="${motor_constant}"
    moment_constant="${moment_constant}"
    parent="base_link"
    mass_rotor="${mass_rotor}"
    radius_rotor="${radius_rotor}"
    time_constant_up="${time_constant_up}"
    time_constant_down="${time_constant_down}"
    max_rot_velocity="${max_rot_velocity}"
    motor_number="5"
    rotor_drag_coefficient="${rotor_drag_coefficient}"
    rolling_moment_coefficient="${rolling_moment_coefficient}"
    mesh_file="${prop_mesh_file}"
    mesh_scale="${mesh_scale_prop_ccw}"
    color="White">
    <origin xyz="${arm_length_x} -${arm_length_y} ${motor_z_offset - motor_to_mount - motor_height}" rpy="${rad180} 0 0" />
    <xacro:insert_block name="rotor_inertia" />
  </xacro:vertical_rotor>

  <xacro:vertical_rotor
    robot_namespace="${namespace}"
    suffix="bottom_back_left"
    direction="ccw"
    motor_constant="${motor_constant}"
    moment_constant="${moment_constant}"
    parent="base_link"
    mass_rotor="${mass_rotor}"
    radius_rotor="${radius_rotor}"
    time_constant_up="${time_constant_up}"
    time_constant_down="${time_constant_down}"
    max_rot_velocity="${max_rot_velocity}"
    motor_number="7"
    rotor_drag_coefficient="${rotor_drag_coefficient}"
    rolling_moment_coefficient="${rolling_moment_coefficient}"
    mesh_file="${prop_mesh_file}"
    mesh_scale="${mesh_scale_prop_ccw}"
    color="White">
    <origin xyz="-${arm_length_x} ${arm_length_y} ${motor_z_offset - motor_to_mount - motor_height}" rpy="${rad180} 0 0" />
    <xacro:insert_block name="rotor_inertia" />
  </xacro:vertical_rotor>

  <xacro:vertical_rotor
    robot_namespace="${namespace}"
    suffix="bottom_front_left"
    direction="cw"
    motor_constant="${motor_constant}"
    moment_constant="${moment_constant}"
    parent="base_link"
    mass_rotor="${mass_rotor}"
    radius_rotor="${radius_rotor}"
    time_constant_up="${time_constant_up}"
    time_constant_down="${time_constant_down}"
    max_rot_velocity="${max_rot_velocity}"
    motor_number="4"
    rotor_drag_coefficient="${rotor_drag_coefficient}"
    rolling_moment_coefficient="${rolling_moment_coefficient}"
    mesh_file="${prop_mesh_file}"
    mesh_scale="${mesh_scale_prop_cw}"
    color="White">
    <origin xyz="${arm_length_x} ${arm_length_y} ${motor_z_offset - motor_to_mount - motor_height}" rpy="${rad180} 0 0" />
    <xacro:insert_block name="rotor_inertia" />
  </xacro:vertical_rotor>

  <xacro:vertical_rotor
    robot_namespace="${namespace}"
    suffix="bottom_back_right"
    direction="cw"
    motor_constant="${motor_constant}"
    moment_constant="${moment_constant}"
    parent="base_link"
    mass_rotor="${mass_rotor}"
    radius_rotor="${radius_rotor}"
    time_constant_up="${time_constant_up}"
    time_constant_down="${time_constant_down}"
    max_rot_velocity="${max_rot_velocity}"
    motor_number="6"
    rotor_drag_coefficient="${rotor_drag_coefficient}"
    rolling_moment_coefficient="${rolling_moment_coefficient}"
    mesh_file="${prop_mesh_file}"
    mesh_scale="${mesh_scale_prop_cw}"
    color="White">
    <origin xyz="-${arm_length_x} -${arm_length_y} ${motor_z_offset - motor_to_mount - motor_height}" rpy="${rad180} 0 0" />
    <xacro:insert_block name="rotor_inertia" />
  </xacro:vertical_rotor>

  <!--}-->

  <!--}-->
  
  <!--}-->

  <!-- ================================================================== -->
  <!-- ||                compulsory sensor definitions                 || -->
  <!-- ================================================================== -->

  <!-- Mavlink interface {-->
  <!-- Instantiate mavlink telemetry interface. -->
  <xacro:mavlink_interface_macro
    namespace="${namespace}"
    imu_sub_topic="/imu"
    mag_sub_topic="/mag"
    baro_sub_topic="/baro"
    mavlink_addr="$(arg mavlink_addr)"
    mavlink_udp_port="$(arg mavlink_udp_port)"
    mavlink_tcp_port="$(arg mavlink_tcp_port)"
    serial_enabled="$(arg serial_enabled)"
    serial_device="$(arg serial_device)"
    baudrate="$(arg baudrate)"
    qgc_addr="$(arg qgc_addr)"
    qgc_udp_port="$(arg qgc_udp_port)"
    sdk_addr="$(arg sdk_addr)"
    sdk_udp_port="$(arg sdk_udp_port)"
    hil_mode="$(arg hil_mode)"
    hil_state_level="$(arg hil_state_level)"
    vehicle_is_tailsitter="$(arg vehicle_is_tailsitter)"
    send_vision_estimation="$(arg send_vision_estimation)"
    send_odometry="$(arg send_odometry)"
    enable_lockstep="$(arg use_lockstep)"
    use_tcp="$(arg use_tcp)"
    >
  </xacro:mavlink_interface_macro>
  <!--}-->

  <!-- GPS {-->
  <xacro:gps_macro
    gps_name="gps0"
    pos_x="0.0"
    pos_y="0.0"
    pos_z="0.0"
    gps_noise="true"
    gps_xy_random_walk="2.0"
    gps_z_random_walk="4.0"
    gps_xy_noise_density="2.0e-4"
    gps_z_noise_density="4.0e-4"
    gps_vxy_noise_density="0.2"
    gps_vz_noise_density="0.4"
    update_rate="10"
    namespace="${namespace}"
    parent_link="base_link">
  </xacro:gps_macro>
  <!--}-->

  <!-- Magnetometer {-->
  <xacro:magnetometer_plugin_macro
    namespace="${namespace}"
    pub_rate="100"
    noise_density="0.0004"
    random_walk="0.0000064"
    bias_correlation_time="600"
    mag_topic="/mag"
    >
  </xacro:magnetometer_plugin_macro>
  <!--}-->

   <!-- Groundtruth {-->
  <xacro:groundtruth_plugin_macro
    namespace="${namespace}"
    home_latitude="0.0"
    home_longitude="0.0"
    home_altitude="0.0"
    >
  </xacro:groundtruth_plugin_macro>
  <!--}-->

 <!-- Barometer {-->
  <xacro:barometer_plugin_macro
  namespace="${namespace}"
  pub_rate="50"
  baro_topic="/baro"
  baro_drift_pa_per_sec="0"
  >
  </xacro:barometer_plugin_macro>
  <!--}-->

  <!-- IMU (ADIS16448) {-->
  <xacro:imu_plugin_macro
    namespace="${namespace}"
    imu_suffix=""
    parent_link="base_link"
    imu_topic="/imu"
    mass_imu_sensor="0.015"
    gyroscope_noise_density="0.00018665"
    gyroscope_random_walk="0.000038785"
    gyroscope_bias_correlation_time="1000.0"
    gyroscope_turn_on_bias_sigma="0.0087"
    accelerometer_noise_density="0.00186"
    accelerometer_random_walk="0.006"
    accelerometer_bias_correlation_time="300.0"
    accelerometer_turn_on_bias_sigma="0.1960"
    >
  <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001" />
  <origin xyz="0 0 0" rpy="0 0 0" />
  </xacro:imu_plugin_macro>
  <!--}-->

  <!-- ================================================================== -->
  <!-- ||                  optional sensor definitions                 || -->
  <!-- ================================================================== -->

  <!-- Ground truth {-->
  <xacro:if value="${optionals['enable_ground_truth']}">
    <!-- Mount a generic odometry sensor providing ground truth. -->
    <xacro:odometry_plugin_macro
      namespace="${namespace}"
      odometry_sensor_suffix="_ground_truth"
      parent_link="base_link"
      topic_name="ground_truth"
      frame_name="world"
      mass_odometry_sensor="0.00001"
      noise="0"
      frame_rate="150"
      xyz_offset="0 0 0"
      rpy_offset="0 0 0">
    <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001" /> <!-- [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] -->
    <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0" />
    </xacro:odometry_plugin_macro>
  </xacro:if>
  <!--}-->

  <!-- ======================= rangefinder sensors ======================-->

  <!-- Garmin {-->
  <xacro:if value="${optionals['enable_rangefinder']}">
    <xacro:garmin_macro
      namespace="${namespace}"
      parent_link="base_link"
      orientation=""
      x="0.0775"
      y="0"
      z="-0.039"
      roll="0"
      pitch="${rad90}"
      yaw="0"
      >
    </xacro:garmin_macro>
  </xacro:if>
  <!--}-->

  <!-- Garmin looking up {-->
  <xacro:if value="${optionals['enable_rangefinder_up']}">
    <xacro:garmin_macro
      namespace="${namespace}"
      parent_link="base_link"
      orientation="_up"
      x="0.0775"
      y="0"
      z="0"
      roll="0"
      pitch="-${rad90}"
      yaw="0"
      >
    </xacro:garmin_macro>
  </xacro:if>
  <!--}-->

  <!-- Ultrasonic sensors {-->
  <xacro:if value="${optionals['enable_omni_ultrasounds']}">

    <!-- Down -->
    <xacro:ultrasonic_sensor_macro
      namespace="${namespace}"
      parent_link="base_link"
      suffix="_down"
      x="0.02"
      y="0.0"
      z="-0.1535"
      roll="0"
      pitch="${rad90}"
      yaw="0"
      >
    </xacro:ultrasonic_sensor_macro>

    <!-- Up -->
    <xacro:ultrasonic_sensor_macro
      namespace="${namespace}"
      parent_link="base_link"
      suffix="_up"
      x="-0.1686"
      y="0"
      z="0.001"
      roll="0"
      pitch="-${rad90}"
      yaw="0"
      >
    </xacro:ultrasonic_sensor_macro>

    <!-- Front left -->
    <xacro:ultrasonic_sensor_macro
      namespace="${namespace}"
      parent_link="base_link"
      suffix="_fl"
      x="${ultrasonic_x}"
      y="${ultrasonic_y}"
      z="-0.019"
      roll="0"
      pitch="0"
      yaw="${ultrasonic_yaw}"
      >
    </xacro:ultrasonic_sensor_macro>

    <!-- Front right -->
    <xacro:ultrasonic_sensor_macro
      namespace="${namespace}"
      parent_link="base_link"
      suffix="_fr"
      x="${ultrasonic_x}"
      y="-${ultrasonic_y}"
      z="-0.019"
      roll="0"
      pitch="0"
      yaw="-${ultrasonic_yaw}"
      >
    </xacro:ultrasonic_sensor_macro>

    <!-- Back left -->
    <xacro:ultrasonic_sensor_macro
      namespace="${namespace}"
      parent_link="base_link"
      suffix="_bl"
      x="-${ultrasonic_x}"
      y="${ultrasonic_y}"
      z="-0.019"
      roll="0"
      pitch="0"
      yaw="${ultrasonic_yaw + rad90}"
      >
    </xacro:ultrasonic_sensor_macro>

    <!-- Back right -->
    <xacro:ultrasonic_sensor_macro
      namespace="${namespace}"
      parent_link="base_link"
      suffix="_br"
      x="-${ultrasonic_x}"
      y="-${ultrasonic_y}"
      z="-0.019"
      roll="0"
      pitch="0"
      yaw="-${ultrasonic_yaw + rad90}"
      >
    </xacro:ultrasonic_sensor_macro>
  </xacro:if>
  <!--}-->

  <!-- ========================== LIDAR sensors ========================= -->

  <!-- Rplidar {-->
  <xacro:if value="${optionals['enable_rplidar']}">
    <xacro:rplidar_macro
      namespace="${namespace}"
      x="0.0"
      y="0.0"
      z="0.09"
      roll="0"
      pitch="0"
      yaw="0"
      >
    </xacro:rplidar_macro>
  </xacro:if>
  <!--}-->

  <!-- Ouster {-->
  <xacro:if value="${optionals['enable_ouster']}">
    <xacro:property name="ouster_model" value="${optionals['ouster_model']}" />

    <!-- OS1-16 Generation 1 (default) -->
    <xacro:property name="lasers" value="16" />
    <xacro:property name="vfov_angle" value="33.2" />
    <xacro:property name="range" value="120" />
    <xacro:if value="${ouster_model == 'OS1-16'}">
      <xacro:property name="lasers" value="16" />
      <xacro:property name="vfov_angle" value="33.2" />
      <xacro:property name="range" value="120" />
    </xacro:if>

    <!-- OS0 {-->
    <!-- OS0-32 -->
    <xacro:if value="${ouster_model == 'OS0-32'}">
      <xacro:property name="lasers" value="32" />
      <xacro:property name="vfov_angle" value="90" />
      <xacro:property name="range" value="55" />
    </xacro:if>

    <!-- OS0-64 -->
    <xacro:if value="${ouster_model == 'OS0-64'}">
      <xacro:property name="lasers" value="64" />
      <xacro:property name="vfov_angle" value="90" />
      <xacro:property name="range" value="55" />
    </xacro:if>

    <!-- OS0-128 -->
    <xacro:if value="${ouster_model == 'OS0-128'}">
      <xacro:property name="lasers" value="128" />
      <xacro:property name="vfov_angle" value="90" />
      <xacro:property name="range" value="55" />
    </xacro:if>

    <!--}-->

    <!-- OS1 Generation 2 {-->
    <!-- OS1-32 Generation 2 -->
    <xacro:if value="${ouster_model == 'OS1-32'}">
      <xacro:property name="lasers" value="32" />
      <xacro:property name="vfov_angle" value="45" />
      <xacro:property name="range" value="120" />
    </xacro:if>

    <!-- OS1-64 Generation 2 -->
    <xacro:if value="${ouster_model == 'OS1-64'}">
      <xacro:property name="lasers" value="64" />
      <xacro:property name="vfov_angle" value="45" />
      <xacro:property name="range" value="120" />
    </xacro:if>

    <!-- OS1-128 Generation 2 -->
    <xacro:if value="${ouster_model == 'OS1-128'}">
      <xacro:property name="lasers" value="128" />
      <xacro:property name="vfov_angle" value="45" />
      <xacro:property name="range" value="120" />
    </xacro:if>

    <!--}-->

    <!-- OS2 {-->
    <!-- OS2-32 -->
    <xacro:if value="${ouster_model == 'OS2-32'}">
      <xacro:property name="lasers" value="32" />
      <xacro:property name="vfov_angle" value="22.5" />
      <xacro:property name="range" value="240" />
    </xacro:if>

    <!-- OS2-64 -->
    <xacro:if value="${ouster_model == 'OS2-64'}">
      <xacro:property name="lasers" value="64" />
      <xacro:property name="vfov_angle" value="22.5" />
      <xacro:property name="range" value="240" />
    </xacro:if>

    <!-- OS2-128 -->
    <xacro:if value="${ouster_model == 'OS2-128'}">
      <xacro:property name="lasers" value="128" />
      <xacro:property name="vfov_angle" value="22.5" />
      <xacro:property name="range" value="240" />
    </xacro:if>

    <!--}-->

  <xacro:ouster_macro
    namespace="${namespace}"
    sensor_name="os"
    x="0"
    y="0"
    z="0.0611"
    roll="0"
    pitch="0"
    yaw="0"
    rot_freq="10"
    lasers="${lasers}"
    vfov_angle="${vfov_angle}"
    max_range="${range}"
    noise="0.03"
    enable_gpu_ray="${optionals['use_gpu_ray']}"
    >
  </xacro:ouster_macro>
  </xacro:if>
  <!--}-->

  <!-- ========================= camera sensors ========================= -->

  <!-- Realsense placements {-->

  <!-- front {-->
  <xacro:if value="${optionals['enable_realsense_front']}">
    <!-- sensor -->
    <xacro:realsense_macro
      namespace="${namespace}"
      camera_name="rgbd"
      camera_suffix=""
      parent_link="base_link"
      parent_frame_name="${namespace}/fcu"
      enable_realistic_realsense="${optionals['use_realistic_realsense']}"
      x="0.2255"
      y="0"
      z="-0.0155"
      roll="0"
      pitch="0"
      yaw="0">
    </xacro:realsense_macro>
  </xacro:if>
  <!--}-->

  <!--} Realsense placements-->

  <!-- Servo camera {-->
  <xacro:servo_camera_macro
    namespace="${namespace}"
    name="servo_camera_macro"
    parent="base_link"
    offset_x="0.2278"
    offset_y="0.0"
    offset_z="-0.1378"
    offset_roll="0.0"
    offset_yaw="0.0"
    offset_pitch="0.0"
    max_pitch_rate="0.1"
    camera_type="servo_camera"
    update_rate="5.0"
    compensate_tilt="true">
    <visual>
      <geometry>
        <mesh filename="${sony_camera_mesh_file}" scale="${mesh_scale}" />
      </geometry>
    </visual>
  </xacro:servo_camera_macro>
  <!--}-->

  <!-- ========================== other sensors ========================= -->

  <!-- Light {-->
  <xacro:if value="${optionals['enable_light']}">
    <xacro:light_macro
      namespace="${namespace}"
      name="light_macro"
      parent="base_link"
      offset_x="0.2"
      offset_y="0.0"
      offset_z="-0.10"
      offset_roll="0.0"
      offset_yaw="0.0"
      offset_pitch="0.0"
      max_pitch_rate="0.1"
      initial_on="1"
      update_rate="30.0"
      compensate_tilt="true">
    </xacro:light_macro>
  </xacro:if>
  <!--}-->
  
  <!-- Safety LED {-->
  <xacro:if value="${optionals['enable_safety_led']}">
    <xacro:safety_led_macro
      namespace="${namespace}"
      name="safety_led"
      parent="base_link"
      failure_duration_threshold="0.2"
      x="-0.202"
      y="0.0"
      z="-0.0195"
      roll="0.0"
      pitch="0.0"
      yaw="3.1415">
    </xacro:safety_led_macro>
  </xacro:if>
  <!--}-->

  <!-- ================================================================== -->
  <!-- ||         other equipment definitions (holders, boxes ...)     || -->
  <!-- ================================================================== -->

  <!-- ============================= holders ============================ -->

  <!-- ========================== other sensors ========================= -->

</robot>
