<?xml version=1.0?>

<robot name=f450 xmlns:xacro=http://ros.org/wiki/xacro>

  {# Args {#}
  {# Properties that can be assigned at build time as arguments.
  Is there a reason not to make all properties arguments?
  #}
  {%- set name = f450 -%}
  {%- set mavlink_addr = INADDR_ANY -%}
  {%- set mavlink_udp_port = 14560 -%}
  {%- set mavlink_tcp_port = 4560 -%}
  {%- set serial_enabled = false -%}
  {%- set serial_device = /dev/ttyACM0 -%}
  {%- set baudrate = 921600 -%}
  {%- set qgc_addr = INADDR_ANY -%}
  {%- set qgc_udp_port = 14550 -%}
  {%- set sdk_addr = INADDR_ANY -%}
  {%- set sdk_udp_port = 14540 -%}
  {%- set hil_mode = false -%}
  {%- set hil_state_level = false -%}
  {%- set send_vision_estimation = false -%}
  {%- set send_odometry = false -%}
  {%- set use_lockstep = true -%}
  {%- set use_tcp = true -%}
  {%- set vehicle_is_tailsitter = false -%}
  {%- set visual_material = DarkGrey -%}
  {%- set gps_indoor_jamming = false -%}
  

  {# includes definition of sensors xacros and Math {#}
    {# macros for gazebo plugins, sensors #}
    <xacro:include filename=$(arg mrs_robots_description_dir)/urdf/component_snippets.xacro -%}
  

  {# ================================================================== #}
  {# ||                    parameters definition                     || #}
  {# ================================================================== #}

  {# Robot parameters and arguments {#}
  {%- set use_battery_mount = true -%} {# [m] #}
  

  {# Motor constants {#}
      ixy=0 ixz=0 iyz=0-%}
      {#   ixy=0.0 ixz=0.0  iyz=0.0 -%} #}
    {# [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] #}
    <inertia ixx=0.0001 ixy=0.0 ixz=0.0 iyy=0.0001 iyz=0.0 izz=0.0001 -%} {# [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] #}
    <xacro:insert_block name=body_inertia -%}
  </xacro:multirotor_base_without_mesh_macro>
  
  

  {# Body parts {#}

  {# Boards {#}
  <xacro:visual_macro
    robot_namespace=${namespace}
    name=lower_central_board
    mesh_file=${central_board_mesh_bottom}
    mesh_scale=${mesh_scale}
    parent=base_link
    color=DarkGrey>
    <origin xyz=0 0 -${body_height/2} rpy=0 0 0 -%}
  </xacro:visual_macro>

  <xacro:visual_macro
    robot_namespace=${namespace}
    name=upper_central_board
    mesh_file=${central_board_mesh_top}
    mesh_scale=${mesh_scale}
    parent=base_link
    color=DarkGrey>
    <origin xyz=0 0 ${arm_height - body_height/2} rpy=0 0 0 -%}
  </xacro:visual_macro>
  

  {# Arms {#}
  <xacro:visual_macro
    robot_namespace=${namespace}
    name=front_right_arm
    mesh_file=${arm_mesh_file}
    mesh_scale=${mesh_scale}
    parent=base_link
    color=White>
    <origin xyz=${board_radius * sin45} -${board_radius * sin45} ${arm_height - body_height/2} rpy=0 0 -${rad45} -%}
  </xacro:visual_macro>

  <xacro:visual_macro
    robot_namespace=${namespace}
    name=front_left_arm
    mesh_file=${arm_mesh_file}
    mesh_scale=${mesh_scale}
    parent=base_link
    color=White>
    <origin xyz=${board_radius * sin45} ${board_radius * sin45} ${arm_height - body_height/2} rpy=0 0 ${rad45} -%}
  </xacro:visual_macro>

  <xacro:visual_macro
    robot_namespace=${namespace}
    name=back_right_arm
    mesh_file=${arm_mesh_file}
    mesh_scale=${mesh_scale}
    parent=base_link
    color=Red>
    <origin xyz=-${board_radius * sin45} -${board_radius * sin45} ${arm_height - body_height/2} rpy=0 0 -${rad135} -%}
  </xacro:visual_macro>

  <xacro:visual_macro
    robot_namespace=${namespace}
    name=back_left_arm
    mesh_file=${arm_mesh_file}
    mesh_scale=${mesh_scale}
    parent=base_link
    color=Red>
    <origin xyz=-${board_radius * sin45} ${board_radius * sin45} ${arm_height - body_height/2} rpy=0 0 ${rad135} -%}
  </xacro:visual_macro>
  

  {# intel nuc {#}
  <xacro:visual_macro
    robot_namespace=${namespace}
    name=NUC
    mesh_file=${nuc_mesh_file}
    mesh_scale=${mesh_scale_milimeters}
    parent=base_link
    color=DarkGrey>
    <origin xyz=0 0 0.023 rpy=0 0 0 -%}
  </xacro:visual_macro>
  

  {# pixhawk {#}
  <xacro:visual_macro
    robot_namespace=${namespace}
    name=pixhawk
    mesh_file=${pixhawk_mesh_file}
    mesh_scale=${mesh_scale}
    parent=base_link
    color=DarkGrey>
    <origin xyz=0 0 -${body_height/2 - pixhawk_offset} rpy=0 0 0 -%}
  </xacro:visual_macro>
  

  {# legs {#}
  <xacro:leg_macro
    robot_namespace=${namespace}
    name=front_right_leg
    mesh_file=${leg_mesh_file}
    mesh_scale=${mesh_scale_milimeters}
    parent=base_link
    color=White>
    <origin xyz=${(arm_length - leg_offset_r) * sin45} -${(arm_length - leg_offset_r) * sin45} ${arm_height - body_height/2 - leg_offset_z} rpy=0 0 ${rad135} -%}
    <collision>
      <geometry>
        <cylinder length=0.170 radius=${leg_offset_r} -%}
        {# <cylinder length=0.240 radius=${leg_offset_r} -%} #}
      </geometry>
    </collision>
  </xacro:leg_macro>

  <xacro:leg_macro
    robot_namespace=${namespace}
    name=front_left_leg
    mesh_file=${leg_mesh_file}
    mesh_scale=${mesh_scale_milimeters}
    parent=base_link
    color=White>
    <origin xyz=${(arm_length - leg_offset_r) * sin45} ${(arm_length - leg_offset_r) * sin45} ${arm_height - body_height/2 - leg_offset_z} rpy=0 0 -${rad135} -%}
    <collision>
      <geometry>
        <cylinder length=0.170 radius=${leg_offset_r} -%}
        {# <cylinder length=0.240 radius=${leg_offset_r} -%} #}
      </geometry>
    </collision>
  </xacro:leg_macro>

  <xacro:leg_macro
    robot_namespace=${namespace}
    name=rear_left_leg
    mesh_file=${leg_mesh_file}
    mesh_scale=${mesh_scale_milimeters}
    parent=base_link
    color=White>
    <origin xyz=-${(arm_length - leg_offset_r) * sin45} ${(arm_length - leg_offset_r) * sin45} ${arm_height - body_height/2 - leg_offset_z} rpy=0 0 -${rad45} -%}
    <collision>
      <geometry>
        <cylinder length=0.170 radius=${leg_offset_r} -%}
        {# <cylinder length=0.240 radius=${leg_offset_r} -%} #}
      </geometry>
    </collision>
  </xacro:leg_macro>

  <xacro:leg_macro
    robot_namespace=${namespace}
    name=rear_right_leg
    mesh_file=${leg_mesh_file}
    mesh_scale=${mesh_scale_milimeters}
    parent=base_link
    color=White>
    <origin xyz=-${(arm_length - leg_offset_r) * sin45} -${(arm_length - leg_offset_r) * sin45} ${arm_height - body_height/2 - leg_offset_z} rpy=0 0 ${rad45} -%}
    <collision>
      <geometry>
        <cylinder length=0.170 radius=${leg_offset_r} -%}
        {# <cylinder length=0.240 radius=${leg_offset_r} -%} #}
      </geometry>
    </collision>
  </xacro:leg_macro>
  

  {# Rotors {#}
  <xacro:visual_macro
    robot_namespace=${namespace}
    name=front_right_rotor
    mesh_file=${rotor_mesh_file}
    mesh_scale=${mesh_scale}
    parent=base_link
    color=Black>
    <origin xyz=${arm_length * sin45} -${arm_length * sin45} ${arm_height - body_height/2} rpy=0 0 0 -%}
  </xacro:visual_macro>

  <xacro:visual_macro
    robot_namespace=${namespace}
    name=back_right_rotor
    mesh_file=${rotor_mesh_file}
    mesh_scale=${mesh_scale}
    parent=base_link
    color=Black>
    <origin xyz=-${arm_length * sin45} -${arm_length * sin45} ${arm_height - body_height/2} rpy=0 0 0 -%}
  </xacro:visual_macro>

  <xacro:visual_macro
    robot_namespace=${namespace}
    name=front_left_rotor
    mesh_file=${rotor_mesh_file}
    mesh_scale=${mesh_scale}
    parent=base_link
    color=Black>
    <origin xyz=${arm_length * sin45} ${arm_length * sin45} ${arm_height - body_height/2} rpy=0 0 0 -%}
  </xacro:visual_macro>

  <xacro:visual_macro
    robot_namespace=${namespace}
    name=back_left_rotor
    mesh_file=${rotor_mesh_file}
    mesh_scale=${mesh_scale}
    parent=base_link
    color=Black>
    <origin xyz=-${arm_length * sin45} ${arm_length * sin45} ${arm_height - body_height/2} rpy=0 0 0 -%}
  </xacro:visual_macro>
  

  {# Propellers + thrust physics {#}
  <xacro:vertical_rotor
    robot_namespace=${namespace}
    suffix=front_right
    direction=ccw
    motor_constant=${motor_constant}
    moment_constant=${moment_constant}
    parent=base_link
    mass_rotor=${mass_rotor}
    radius_rotor=${radius_rotor}
    time_constant_up=${time_constant_up}
    time_constant_down=${time_constant_down}
    max_rot_velocity=${max_rot_velocity}
    motor_number=0
    rotor_drag_coefficient=${rotor_drag_coefficient}
    rolling_moment_coefficient=${rolling_moment_coefficient}
    mesh_file=${prop_mesh_file}
    mesh_scale=${mesh_scale_prop_ccw}
    color=White>
    <origin xyz=${arm_length * sin45} -${arm_length * sin45} ${arm_height + rotor_offset_top - body_height/2}  rpy=0 0 0 -%}
    <xacro:insert_block name=rotor_inertia -%}
  </xacro:vertical_rotor>

  <xacro:vertical_rotor
    robot_namespace=${namespace}
    suffix=back_left
    direction=ccw
    motor_constant=${motor_constant}
    moment_constant=${moment_constant}
    parent=base_link
    mass_rotor=${mass_rotor}
    radius_rotor=${radius_rotor}
    time_constant_up=${time_constant_up}
    time_constant_down=${time_constant_down}
    max_rot_velocity=${max_rot_velocity}
    motor_number=1
    rotor_drag_coefficient=${rotor_drag_coefficient}
    rolling_moment_coefficient=${rolling_moment_coefficient}
    mesh_file=${prop_mesh_file}
    mesh_scale=${mesh_scale_prop_ccw}
    color=White>
    <origin xyz=-${arm_length * sin45} ${arm_length * sin45} ${arm_height + rotor_offset_top - body_height/2} rpy=0 0 0 -%}
    <xacro:insert_block name=rotor_inertia -%}
  </xacro:vertical_rotor>

  <xacro:vertical_rotor
    robot_namespace=${namespace}
    suffix=front_left
    direction=cw
    motor_constant=${motor_constant}
    moment_constant=${moment_constant}
    parent=base_link
    mass_rotor=${mass_rotor}
    radius_rotor=${radius_rotor}
    time_constant_up=${time_constant_up}
    time_constant_down=${time_constant_down}
    max_rot_velocity=${max_rot_velocity}
    motor_number=2
    rotor_drag_coefficient=${rotor_drag_coefficient}
    rolling_moment_coefficient=${rolling_moment_coefficient}
    mesh_file=${prop_mesh_file}
    mesh_scale=${mesh_scale_prop_cw}
    color=White>
    <origin xyz=${arm_length * sin45} ${arm_length * sin45} ${arm_height + rotor_offset_top - body_height/2} rpy=0 0 0 -%}
    <xacro:insert_block name=rotor_inertia -%}
  </xacro:vertical_rotor>

  <xacro:vertical_rotor
    robot_namespace=${namespace}
    suffix=back_right
    direction=cw
    motor_constant=${motor_constant}
    moment_constant=${moment_constant}
    parent=base_link
    mass_rotor=${mass_rotor}
    radius_rotor=${radius_rotor}
    time_constant_up=${time_constant_up}
    time_constant_down=${time_constant_down}
    max_rot_velocity=${max_rot_velocity}
    motor_number=3
    rotor_drag_coefficient=${rotor_drag_coefficient}
    rolling_moment_coefficient=${rolling_moment_coefficient}
    mesh_file=${prop_mesh_file}
    mesh_scale=${mesh_scale_prop_cw}
    color=White>
    <origin xyz=-${arm_length * sin45} -${arm_length * sin45} ${arm_height + rotor_offset_top - body_height/2} rpy=0 0 0 -%}
    <xacro:insert_block name=rotor_inertia -%}
  </xacro:vertical_rotor>
  

  {# Battery mount and battery{#}
  <xacro:if value=$(arg use_battery_mount)>
    <xacro:visual_macro
      robot_namespace=${namespace}
      name=battery_mount
      mesh_file=${battery_mount_mesh}
      mesh_scale=${mesh_scale_milimeters}
      parent=base_link
      color=DarkGrey>
      <origin xyz=0.0 0 -${body_height/2 + 0.027} rpy=0 0 -${rad90} -%}
    </xacro:visual_macro>

    <xacro:visual_macro_common_geometry_type
      robot_namespace=${namespace}
      name=battery
      parent=base_link
      color=Grey>
      <origin xyz=0 0 -${body_height/2 + 0.024} rpy=0 0 -${rad90} -%}
      <geometry>
        <box size=0.13 0.042 0.044 -%}
      </geometry>
    </xacro:visual_macro_common_geometry_type>
  </xacro:if>
  

  

  {# ================================================================== #}
  {# ||                compulsory sensor definitions                 || #}
  {# ================================================================== #}

  {# Mavlink interface {#}
  {# Instantiate mavlink telemetry interface. #}
  <xacro:mavlink_interface_macro
    namespace=${namespace}
    imu_sub_topic=/imu
    mag_sub_topic=/mag
    baro_sub_topic=/baro
    mavlink_addr=$(arg mavlink_addr)
    mavlink_udp_port=$(arg mavlink_udp_port)
    mavlink_tcp_port=$(arg mavlink_tcp_port)
    serial_enabled=$(arg serial_enabled)
    serial_device=$(arg serial_device)
    baudrate=$(arg baudrate)
    qgc_addr=$(arg qgc_addr)
    qgc_udp_port=$(arg qgc_udp_port)
    sdk_addr=$(arg sdk_addr)
    sdk_udp_port=$(arg sdk_udp_port)
    hil_mode=$(arg hil_mode)
    hil_state_level=$(arg hil_state_level)
    vehicle_is_tailsitter=$(arg vehicle_is_tailsitter)
    send_vision_estimation=$(arg send_vision_estimation)
    send_odometry=$(arg send_odometry)
    enable_lockstep=$(arg use_lockstep)
    use_tcp=$(arg use_tcp)
    >
  </xacro:mavlink_interface_macro>
  

  {# GPS {#}
  <xacro:gps_macro
    gps_name=gps0
    pos_x=0.0
    pos_y=0.0
    pos_z=0.0
    gps_noise=true
    gps_xy_random_walk=2.0
    gps_z_random_walk=4.0
    gps_xy_noise_density=2.0e-4
    gps_z_noise_density=4.0e-4
    gps_vxy_noise_density=0.2
    gps_vz_noise_density=0.4
    update_rate=10
    namespace=${namespace}
    parent_link=base_link>
  </xacro:gps_macro>
  

  {# Magnetometer {#}
  <xacro:magnetometer_plugin_macro
    namespace=${namespace}
    pub_rate=100
    noise_density=0.0004
    random_walk=0.0000064
    bias_correlation_time=600
    mag_topic=/mag
    >
  </xacro:magnetometer_plugin_macro>
  

   {# Groundtruth {#}
  <xacro:groundtruth_plugin_macro
    namespace=${namespace}
    home_latitude=0.0
    home_longitude=0.0
    home_altitude=0.0
    >
  </xacro:groundtruth_plugin_macro>
  

 {# Barometer {#}
  <xacro:barometer_plugin_macro
  namespace=${namespace}
  pub_rate=50
  baro_topic=/baro
  baro_drift_pa_per_sec=0
  >
  </xacro:barometer_plugin_macro>
  

  {# IMU (ADIS16448) {#}
  <xacro:imu_plugin_macro
    namespace=${namespace}
    imu_suffix=
    parent_link=base_link
    imu_topic=/imu
    mass_imu_sensor=0.015
    gyroscope_noise_density=0.00018665
    gyroscope_random_walk=0.000038785
    gyroscope_bias_correlation_time=1000.0
    gyroscope_turn_on_bias_sigma=0.0087
    accelerometer_noise_density=0.00186
    accelerometer_random_walk=0.006
    accelerometer_bias_correlation_time=300.0
    accelerometer_turn_on_bias_sigma=0.1960
    >
  <inertia ixx=0.00001 ixy=0.0 ixz=0.0 iyy=0.00001 iyz=0.0 izz=0.00001 -%}
  <origin xyz=0 0 0 rpy=0 0 0 -%}
  </xacro:imu_plugin_macro>
  

  {# ================================================================== #}
  {# ||                  optional sensor definitions                 || #}
  {# ================================================================== #}

  {# Ground truth {#}
  <xacro:if value=${optionals[enable_ground_truth]}>
    {# Mount a generic odometry sensor providing ground truth. #}
    <xacro:odometry_plugin_macro
      namespace=${namespace}
      odometry_sensor_suffix=_ground_truth
      parent_link=base_link
      topic_name=ground_truth
      frame_name=world
      mass_odometry_sensor=0.00001
      noise=0
      frame_rate=150
      xyz_offset=0 0 0
      rpy_offset=0 0 0>
    <inertia ixx=0.00001 ixy=0.0 ixz=0.0 iyy=0.00001 iyz=0.0 izz=0.00001 -%} {# [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] #}
    <origin xyz=0.0 0.0 0.0 rpy=0.0 0.0 0.0 -%}
    </xacro:odometry_plugin_macro>
  </xacro:if>
  

  {# ======================= rangefinder sensors ======================#}

  {# Garmin {#}
  <xacro:if value=${optionals[enable_rangefinder]}>
    <xacro:garmin_macro
      namespace=${namespace}
      parent_link=base_link
      orientation=
      x=-0.057
      y=0
      z=-${arm_height + 0.0205}
      roll=0
      pitch=${rad90}
      yaw=0
      >
    </xacro:garmin_macro>
  </xacro:if>
  

  {# Garmin looking up {#}
  <xacro:if value=${optionals[enable_rangefinder_up]}>
    <xacro:garmin_macro
      namespace=${namespace}
      parent_link=base_link
      orientation=_up
      x=-0.07
      y=0
      z=-${arm_height + 0.01}
      roll=0
      pitch=-${rad90}
      yaw=0
      >
    </xacro:garmin_macro>
  </xacro:if>
  

  {# Teraranger One {#}
  <xacro:if value=${optionals[enable_teraranger]}>
    <xacro:teraranger_macro
      namespace=${namespace}
      parent_link=base_link
      x=0.08
      y=0
      z=-0.05
      roll=0
      pitch=${rad90}
      yaw=0
      >
    </xacro:teraranger_macro>
  </xacro:if>


  {# ========================== LIDAR sensors ========================= #}

  {# Scanse Sweep {#}
  <xacro:if value=${optionals[enable_scanse_sweep]}>
    <xacro:scanse_sweep_macro
      namespace=${namespace}
      x=0.0
      y=0.0
      z=0.113
      roll=0
      pitch=0
      yaw=0
      >
    </xacro:scanse_sweep_macro>
  </xacro:if>
  

  {# Rplidar {#}
  <xacro:if value=${optionals[enable_rplidar]}>
    <xacro:rplidar_macro
      namespace=${namespace}
      x=0.0
      y=0.0
      z=0.1
      roll=0
      pitch=0
      yaw=0
      >
    </xacro:rplidar_macro>
  </xacro:if>
  

  {# Velodyne  {#}
  <xacro:if value=${optionals[enable_velodyne]}>

    {# VLP-16 (default) #}
    <origin xyz=0.03 0.10 0.06 rpy=0 0 ${rad70} -%}
    </xacro:uvcam_macro>

    <xacro:uvcam_macro
      namespace=${namespace}
      parent_link=base_link
      number=2
      frame_rate=60
      camera_publish_topic=/${namespace}/uvdar_bluefox_right/image_raw
      calibration_file=${optionals[uvcam_calib_file]}
      occlusions=${optionals[uvcam_occlusions]}>
    <origin xyz=0.03 -0.10 0.06 rpy=0 0 -${rad70} -%}
    </xacro:uvcam_macro>

  </xacro:if>
  

  {# Back UV camera {#}
  <xacro:if value=${optionals[enable_back_uv_camera]}>

    <xacro:uvcam_macro
      namespace=${namespace}
      parent_link=base_link
      number=3
      frame_rate=60
      camera_publish_topic=/${namespace}/uvdar_bluefox_back/image_raw
      calibration_file=${optionals[uvcam_calib_file]}
      occlusions=${optionals[uvcam_occlusions]}>
    <origin xyz=-0.1 0.0 -0.02 rpy=${rad90} 0 ${rad180} -%}
    </xacro:uvcam_macro>

  </xacro:if>
  

  {# Servo camera {#}
  <xacro:if value=${optionals[enable_servo_camera]}>
    <xacro:servo_camera_macro
      namespace=${namespace}
      name=servo_camera_macro
      parent=base_link
      offset_x=0.2
      offset_y=0.0
      offset_z=-0.10
      offset_roll=0.0
      offset_yaw=0.0
      offset_pitch=0.0
      max_pitch_rate=0.1
      camera_type=servo_camera
      update_rate=30.0
      compensate_tilt=true>
    </xacro:servo_camera_macro>
  </xacro:if>
  

  {# ========================== other sensors ========================= #}

  {# Teraranger Tower Evo {#}
  <xacro:if value=${optionals[enable_teraranger_tower_evo]}>
    <xacro:teraranger_tower_evo_macro
      namespace=${namespace}
      parent_link=base_link
      frame_name=${namespace}/teraranger_tower
      parent_frame_name=${namespace}/fcu
      >
      <origin xyz=0.0 0.0 0.178 rpy=0 0 0 -%}
    </xacro:teraranger_tower_evo_macro>
  </xacro:if>
  

  {# Magnetic gripper {#}
  <xacro:if value=${optionals[enable_magnetic_gripper]}>
    <xacro:magnet_gripper_macro
      namespace=${namespace}
      name=gripper
      color=White
      parent=base_link>
      <origin xyz=0 0 -${0.20/2 + 0.01} rpy=0 0 1.5708 -%}
    </xacro:magnet_gripper_macro>
  </xacro:if>
  

  {# Timepix {#}
  <xacro:if value=${optionals[enable_timepix]}>
    <xacro:timepix_macro
      namespace=${namespace}
      name=timepix
      parent=base_link
      color=Green>
      <origin xyz=0.115 -0.05 -0.05 rpy=0 0 0 -%}
    </xacro:timepix_macro>
  </xacro:if>
  

  {# UV leds {#}

  {# UV led - quadrotor configuration {#}
  <xacro:macro name=uvled_quadrotor
    params=s1 s2 namespace parent_link>
    {# UV LED #}
    <xacro:uvled_macro
      namespace=${namespace}
      parent_link=base_link
      number=1
      signal_id=${s1}>
      <origin xyz=-.1697045 .1767755 -0.05 rpy=0 ${rad90} ${rad90} -%}
    </xacro:uvled_macro>
    <xacro:uvled_macro
      namespace=${namespace}
      parent_link=base_link
      number=2
      signal_id=${s1}>
      <origin xyz=-.1767755 .1697045 -0.05 rpy=0 ${rad90} ${rad180} -%}
    </xacro:uvled_macro>
    <xacro:uvled_macro
      namespace=${namespace}
      parent_link=base_link
      number=3
      signal_id=${s2}>
      <origin xyz=-.1767755 -.1697045 -0.05 rpy=0 ${rad90} -${rad180} -%}
    </xacro:uvled_macro>
    <xacro:uvled_macro
      namespace=${namespace}
      parent_link=base_link
      number=4
      signal_id=${s2}>
      <origin xyz=-.1697045 -.1767755 -0.05 rpy=0 ${rad90} -${rad90} -%}
    </xacro:uvled_macro>
    <xacro:uvled_macro
      namespace=${namespace}
      parent_link=base_link
      number=5
      signal_id=${s2}>
      <origin xyz=.1697045 -.1767755 -0.05 rpy=0 ${rad90} -${rad90} -%}
    </xacro:uvled_macro>
    <xacro:uvled_macro
      namespace=${namespace}
      parent_link=base_link
      number=6
      signal_id=${s2}>
      <origin xyz=.1767755 -.1697045 -0.05 rpy=0 ${rad90} 0 -%}
    </xacro:uvled_macro>
    <xacro:uvled_macro
      namespace=${namespace}
      parent_link=base_link
      number=7
      signal_id=${s1}>
      <origin xyz=.1767755 .1697045 -0.05 rpy=0 ${rad90} 0 -%}
    </xacro:uvled_macro>
    <xacro:uvled_macro
      namespace=${namespace}
      parent_link=base_link
      number=8
      signal_id=${s1}>
      <origin xyz=.1697045 .1767755 -0.05 rpy=0 ${rad90} ${rad90} -%}
    </xacro:uvled_macro>
  </xacro:macro>
  

  <xacro:if value=${optionals[enable_uv_leds]}>
    <xacro:uvled_quadrotor
      s1=${optionals[uvled_s_l]}
      s2=${optionals[uvled_s_r]}
      namespace=${namespace}
      parent_link=base_link-%}
  </xacro:if>
  

  {# UV led beacon {#}

  {# UV led - beacon configuration {#}
  <xacro:macro name=uvled_beacon
    params=height s namespace parent_link>
    {# UV LED #}
    <xacro:uvled_macro
      namespace=${namespace}
      parent_link=base_link
      number=b1
      signal_id=${s}>
      <origin xyz=0.01 0 ${height} rpy=0 ${rad90} 0 -%}
    </xacro:uvled_macro>
    <xacro:uvled_macro
      namespace=${namespace}
      parent_link=base_link
      number=b2
      signal_id=${s}>
      <origin xyz=0 0.01 ${height} rpy=0 ${rad90} ${rad90} -%}
    </xacro:uvled_macro>
    <xacro:uvled_macro
      namespace=${namespace}
      parent_link=base_link
      number=b3
      signal_id=${s}>
      <origin xyz=-0.01 0 ${height} rpy=0 ${rad90} ${rad180} -%}
    </xacro:uvled_macro>
    <xacro:uvled_macro
      namespace=${namespace}
      parent_link=base_link
      number=b4
      signal_id=${s}>
      <origin xyz=0 -0.01 ${height} rpy=0 ${rad90} -${rad90} -%}
    </xacro:uvled_macro>
  </xacro:macro>
  

  <xacro:if value=${optionals[enable_uv_leds_beacon]}>
    <xacro:uvled_beacon
      height=0.15
      s=${optionals[uvled_beacon_f]}
      namespace=${namespace}
      parent_link=base_link-%}
  </xacro:if>
  

  {# Light {#}
  <xacro:if value=${optionals[enable_light]}>
    <xacro:light_macro
      namespace=${namespace}
      name=light_macro
      parent=base_link
      offset_x=0.2
      offset_y=0.0
      offset_z=-0.10
      offset_roll=0.0
      offset_yaw=0.0
      offset_pitch=0.0
      max_pitch_rate=0.1
      initial_on=1
      update_rate=30.0
      compensate_tilt=true>
    </xacro:light_macro>
  </xacro:if>
  

  {# ================================================================== #}
  {# ||         other equipment definitions (holders, boxes ...)     || #}
  {# ================================================================== #}

  {# ============================= holders ============================ #}

  {# Ouster and Velodyne mount {#}
  <xacro:if value=${(optionals[enable_ouster] == true) or (optionals[enable_velodyne] == true)}>
    <xacro:visual_macro
      robot_namespace=${namespace}
      name=ouster_mount
      mesh_file=${ouster_mount_mesh}
      mesh_scale=${mesh_scale_milimeters}
      parent=base_link
      color=DarkGrey>
    <origin xyz=0.0 0 0.061 rpy=0 0 0 -%}
    </xacro:visual_macro>
  </xacro:if>
  

  {# Rplidar and scanse mount {#}
  <xacro:if value=${(optionals[enable_rplidar] == true) or (optionals[enable_scanse_sweep] == true)}>
    <xacro:visual_macro
      robot_namespace=${namespace}
      name=rplidar_mount
      mesh_file=${rplidar_mount_mesh}
      mesh_scale=${mesh_scale_milimeters}
      parent=base_link
      color=DarkGrey>
    <origin xyz=0.0 0 0.068 rpy=0 0 ${rad90} -%}
    </xacro:visual_macro>
  </xacro:if>
  

  {# Garmin mount {#}
  <xacro:if value=${optionals[enable_rangefinder]}>
    <xacro:visual_macro
      robot_namespace=${namespace}
      name=garmin_mount
      mesh_file=${garmin_mount_mesh}
      mesh_scale=${mesh_scale_milimeters}
      parent=base_link
      color=DarkGrey>
      <origin xyz=-0.055 0 -${arm_height + 0.016} rpy=${rad90} 0 ${rad90} -%}
    </xacro:visual_macro>
  </xacro:if>
  

  {# Bluefox mount {#}
  <xacro:if value=${optionals[enable_rangefinder]}>
    <xacro:visual_macro
      robot_namespace=${namespace}
      name=bluefox_mount
      mesh_file=${bluefox_mount_mesh}
      mesh_scale=${mesh_scale_milimeters}
      parent=base_link
      color=DarkGrey>
      <origin xyz=0.051 0 -${arm_height + 0.02} rpy=${rad90} 0 -${rad90} -%}
    </xacro:visual_macro>
  </xacro:if>
  

  {# Realsense front mount {#}
  <xacro:if value=${optionals[enable_realsense_front]}>
    <xacro:visual_macro
      robot_namespace=${namespace}
      name=realsense_front_mount
      mesh_file=${realsense_front_mount_mesh}
      mesh_scale=${mesh_scale_milimeters}
      parent=base_link
      color=DarkGrey>
      <origin xyz=0.153 0 -0.089 rpy=0 0 0 -%}
    </xacro:visual_macro>
  </xacro:if>
  

  {# Realsense front pitched mount {#}
  <xacro:if value=${optionals[enable_realsense_front_pitched]}>
    <xacro:visual_macro
      robot_namespace=${namespace}
      name=realsense_front_pitched_mount
      mesh_file=${realsense_front_pitched_mount_mesh}
      mesh_scale=${mesh_scale_milimeters}
      parent=base_link
      color=DarkGrey>
      <origin xyz=0.153 0 -0.089 rpy=0 0 0 -%}
    </xacro:visual_macro>
  </xacro:if>
  

  {# Realsense down mount {#}
  <xacro:if value=${optionals[enable_realsense_down]}>
    <xacro:visual_macro
      robot_namespace=${namespace}
      name=realsense_down_mount
      mesh_file=${realsense_front_down_mount_mesh}
      mesh_scale=${mesh_scale_milimeters}
      parent=base_link
      color=DarkGrey>
      <origin xyz=0.153 0 -0.089 rpy=0 0 0 -%}
    </xacro:visual_macro>
  </xacro:if>
  

  {# UVDAR mount {#}
  <xacro:if value=${optionals[enable_dual_uv_cameras]}>
    <xacro:visual_macro
      robot_namespace=${namespace}
      name=uvdar_mount
      mesh_file=${uvdar_mount_mesh}
      mesh_scale=${mesh_scale_milimeters}
      parent=base_link
      color=DarkGrey>
    <origin xyz=0.025 0 0.036 rpy=0 0 0 -%}
    </xacro:visual_macro>
  </xacro:if>
  

  {# ========================== other sensors ========================= #}

  {# Whycon box {#}
  <xacro:if value=${optionals[enable_whycon_box]}>
    <xacro:box_macro
      robot_namespace=${namespace}
      name=whycon_box
      mesh_scale=2 2 2
      mesh_file=${box_mesh_file}
      parent=base_link>
      <origin xyz=0 0 0.25 rpy=0 0 0 -%}
    </xacro:box_macro>
  </xacro:if>
  

  {# Pendulum {#}
  <xacro:if value=${optionals[enable_pendulum]}>
    <xacro:pendulum
      parent=base_link>
    </xacro:pendulum>
  </xacro:if>
  

{# Ball holder {#}
<xacro:if value=${optionals[enable_ball_holder]}>
  <xacro:ball_holder
      parent=base_link>
  </xacro:ball_holder>
</xacro:if>


</robot>
